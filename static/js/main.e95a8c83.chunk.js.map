{"version":3,"sources":["Context/AuthContext/AuthContext.js","components/Templates/Toolbar/main-logo.jpg","components/Templates/Toolbar/Toolbar.js","components/Templates/Footer/Footer.js","components/Auxiliary/Auxiliary.js","components/Templates/Backdrop/Backdrop.js","components/Templates/Form/SigninForm.js","components/Templates/Form/SignupForm.js","containers/Layout/Layout.js","components/Templates/SideDrawer/TrainingOptions/icons/lilach_running.jpg","components/Templates/SideDrawer/TrainingOptions/TrainingOptions.js","containers/UserContent/WorkoutBuilder/icons/lilach_running.jpg","containers/UserContent/WorkoutBuilder/WorkoutBuilder.js","components/Templates/InputSelection/InputSelection.js","containers/UserContent/WorkoutBuilder/FunctionalBuilder/FunctionalBuilderUtility.js","containers/UserContent/WorkoutBuilder/FunctionalBuilder/icons/core.jpg","containers/UserContent/WorkoutBuilder/FunctionalBuilder/icons/functional.jpg","containers/UserContent/WorkoutBuilder/FunctionalBuilder/icons/hit.jpg","containers/UserContent/WorkoutBuilder/FunctionalBuilder/icons/low-impact.jpg","containers/UserContent/WorkoutBuilder/FunctionalBuilder/icons/yoga.jpg","containers/UserContent/WorkoutBuilder/FunctionalBuilder/FunctionalBuilder.js","containers/UserContent/WorkoutBuilder/StrengthBuilder/StrengthBuilderUtility.js","containers/UserContent/WorkoutBuilder/StrengthBuilder/MuscleOptionDisplay.js","containers/UserContent/WorkoutBuilder/StrengthBuilder/StrengthSideDisplay.js","containers/UserContent/WorkoutBuilder/StrengthBuilder/StrengthReducer.js","containers/UserContent/WorkoutBuilder/icons/chest-muscle.jpg","containers/UserContent/WorkoutBuilder/icons/arms-muscle.jpg","containers/UserContent/WorkoutBuilder/icons/shoulders-muscle.jpg","containers/UserContent/WorkoutBuilder/icons/legs-muscle.jpg","containers/UserContent/WorkoutBuilder/icons/back-muscle.jpg","containers/UserContent/WorkoutBuilder/icons/abs-muscle.jpg","containers/UserContent/WorkoutBuilder/StrengthBuilder/StrengthBuilder.js","containers/UserContent/WorkoutBuilder/RunningBuilder/RunningBuilderUtility.js","containers/UserContent/WorkoutBuilder/RunningBuilder/RunningBuilder.js","containers/UserContent/icons/process-icon.jpg","containers/UserContent/icons/schedule-icon.jpg","containers/UserContent/icons/workout-builder-icon.jpg","containers/UserContent/UserContent.js","components/Templates/HomePage/icons/schedule-icon.jpg","components/Templates/HomePage/icons/workout-builder-icon.jpg","components/Templates/HomePage/NavigationLayer.js","components/Templates/HomePage/icons/background.jpg","components/Templates/HomePage/HomePage.js","components/Routes/Routes.js","App.js","reportWebVitals.ts","index.js"],"names":["AuthenticationContext","createContext","AuthContext","props","useState","authenticated","setAuthenticated","Provider","value","isAuthenticated","changeAuthStatus","children","Toolbar","authContext","useContext","className","to","src","websiteLogo","alt","onClick","signOutClicked","signinClicked","signupClicked","Footer","Auxiliary","Backdrop","clicked","SigninForm","history","useHistory","email","setEmail","password","setPassword","id","type","name","onFocus","onChange","e","target","event","preventDefault","loginClicked","push","loginHandler","SignupForm","isValid","onSubmit","console","log","updatedPassword","includes","trim","length","passwordCheckHandler","SIGN_IN_ATTEMPT","SIGN_UP_ATTEMPT","EXIT_FORM","layOutDisplayReducer","prevDisplay","action","backdrop","signin","signup","Error","Layout","useReducer","layOutDisplay","dispatchLayoutDisplay","useEffect","document","body","style","overflow","backDropView","TrainingOptions","icon","EASY","MEDIUM","HARD","CLEAR_CHOICES","difficultyLevelDropBox","WorkoutBuilder","InputSelection","disabled","disable","dir","direction","changed","selection","durationDropBox","CORE","FUNCTIONAL","LOW_IMPACT","YOGA","FunctionalBuilder","trainingType","setTrainingType","trainingDuration","setTrainingDuration","coreIcon","functionalIcon","hitIcon","lowImpactIcon","yogaIcon","CHEST","ARMS","SHOULDERS","LEGS","BACK","ABS","musclesAmountDropBox","strengthMusclesMap","Map","set","MuscleOptionDisplay","currentExercisesChosen","setCurrentExercisesChosen","choicesSubmitted","content","isMuscleSelected","imageSource","setMuscleSelected","muscle","exercisesToDisplay","categoryExercises","get","exerciseIndex","exercise","updatedExercises","filter","exercisesUpdate","exercisesToChoose","exerciseClickedHandler","getExercises","StrengthSideDisplay","currentMusclesChosenAmount","musclesAmount","difficultyLevel","choiceSubmitted","workoutSubmit","clearClicked","submitClicked","musclesReducer","curMusclesChoice","exercisesReducer","curExercisesChoice","numOfExercisesPerMuscle","StrengthBuilder","userMusclesChoice","dispatchUserMusclesChoice","setDifficultyLevel","userExercisesChoice","dispatchUserExercisesChoice","setChoicesSubmitted","chosenExercisesMap","setChosenExercisesMap","updateExerciseHandler","exercises","updatedChosenExercises","parseInt","chestIcon","armsIcon","shouldersIcon","legsIcon","backIcon","absIcon","runningDistanceDropBox","RunningBuilder","distance","setDistance","workoutSubmitted","setWorkoutSubmitted","UserContent","processHovered","setProcessHovered","scheduleHovered","setScheduleHovered","builderHovered","setBuilderHovered","onMouseOver","onMouseLeave","processImage","scheduleImage","builderIcon","NavigationLayer","trainingOptionsLogo","usersReviewLogo","HomePage","homePageImage","Routes","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e95a8c83.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\r\n\r\nexport const AuthenticationContext = createContext();\r\n\r\nconst AuthContext = props => {\r\n\r\n    const[authenticated,setAuthenticated] = useState(false);\r\n\r\n    const changeAuthStatus = () => {\r\n        setAuthenticated(!authenticated)\r\n    }\r\n\r\n    return (\r\n        <AuthenticationContext.Provider value={{\r\n            isAuthenticated: authenticated,\r\n            changeAuthStatus:  changeAuthStatus\r\n            }}>\r\n                {props.children}\r\n        </AuthenticationContext.Provider>\r\n    )\r\n};\r\n\r\nexport default AuthContext;","export default __webpack_public_path__ + \"static/media/main-logo.be81e555.jpg\";","import './Toolbar.css'\r\nimport { useContext } from 'react'\r\nimport { AuthenticationContext} from '../../../Context/AuthContext/AuthContext'\r\nimport { Link } from 'react-router-dom';\r\nimport websiteLogo from './main-logo.jpg'\r\n\r\n\r\n\r\nexport const Toolbar = props => {\r\n\r\n    const authContext = useContext(AuthenticationContext);\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <Link \r\n                to=\"/\" \r\n                className=\"link_style\">\r\n            <img src={websiteLogo} alt=\"home\"/>\r\n            </Link> \r\n            {authContext.isAuthenticated ?\r\n                <Link \r\n                    to=\"/\" \r\n                    onClick={props.signOutClicked} \r\n                    className=\"link_style\">\r\n                    Sign out\r\n                </Link> : \r\n                <div>\r\n                    <p className=\"p_link_style\" \r\n                        onClick={props.signinClicked} \r\n                        >\r\n                        Sign in\r\n                    </p>\r\n                    <p className=\"p_link_style\" \r\n                        onClick={props.signupClicked} \r\n                        >\r\n                        Sign up\r\n                    </p>\r\n                    {/* <Link \r\n                        to=\"/signup\"\r\n                        onClick={props.signupClicked} \r\n                        className=\"link_style\">\r\n                        Sign up\r\n                    </Link> */}\r\n                </div>}\r\n            <div className=\"bars_container\">\r\n                <Link \r\n                    to=\"/about\"\r\n                    className=\"link_style\">\r\n                    About\r\n                </Link>\r\n                <Link \r\n                    to=\"/contact\"\r\n                    className=\"link_style\">\r\n                    Contact Us\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\n// export const Toolbar: React.FC<ToolBarProps> = ({signupClicked,signinClicked,signOutClicked,isAuth}) => {\r\n    \r\n//     return (\r\n//             <div className=\"toolbar\">\r\n//                 <Link \r\n//                         to=\"/\" \r\n//                         className=\"link_style\">\r\n//                         Home\r\n//                     </Link> \r\n//                 {isAuth ?\r\n//                     <Link \r\n//                         to=\"/auth\" \r\n//                         onClick={signOutClicked} \r\n//                         className=\"link_style\">\r\n//                         Sign out\r\n//                     </Link> : \r\n//                     <div>\r\n//                         <Link \r\n//                             to=\"/signin\" \r\n//                             onClick={signinClicked} \r\n//                             className=\"link_style\">\r\n//                             Sign in\r\n//                         </Link>\r\n//                         <Link \r\n//                             to=\"/signup\"\r\n//                             onClick={signupClicked} \r\n//                             className=\"link_style\">\r\n//                             Sign up\r\n//                         </Link>\r\n//                     </div>}\r\n//                 <div className=\"bars_container\">\r\n//                     <Link \r\n//                         to=\"/about\"\r\n//                         className=\"link_style\">\r\n//                         About\r\n//                     </Link>\r\n//                     <Link \r\n//                         to=\"/contact\"\r\n//                         className=\"link_style\">\r\n//                         Contact Us\r\n//                     </Link>\r\n//                 </div>\r\n//         </div>\r\n//     )\r\n// }\r\n","import './Footer.css'\r\n\r\nexport const Footer = () => {\r\n    return <footer ></footer>\r\n}","export const Auxiliary = props => { \r\n    return props.children;\r\n};\r\n","import './Backdrop.css'\r\n\r\nconst Backdrop = props => {\r\n    return <div className=\"backdrop\" onClick={props.clicked}></div>\r\n    };\r\n\r\nexport default Backdrop;","import './Form.css'\r\nimport { useContext } from 'react'\r\nimport { AuthenticationContext } from '../../../Context/AuthContext/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SigninForm = props => {\r\n\r\n    const authContext = useContext(AuthenticationContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [email,setEmail] = useState('Enter email');\r\n    const [password,setPassword] = useState('Enter password'); \r\n\r\n    const loginHandler = (event) => {\r\n        event.preventDefault();\r\n        authContext.changeAuthStatus();\r\n        props.loginClicked();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"form_container\">\r\n            <h1 id=\"form_title\">sign in</h1>\r\n            <form>\r\n        \r\n                <input \r\n                    type=\"text\" \r\n                    name=\"email\" value={email}\r\n                    onFocus={() => {setEmail(email !== 'Enter email' ? email : '')}}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                />\r\n        \r\n                <input \r\n                    type=\"text\" \r\n                    name=\"password\" \r\n                    value={password} \r\n                    onFocus={() => {setPassword(password !== 'Enter password' ? password : '')}}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n            \r\n                <Link to=\"/\" className=\"password_ret_link\" >Forgot your password?</Link>\r\n                <button \r\n                    className=\"button\" \r\n                    onClick={event => loginHandler(event)}>\r\n                        Login\r\n                    </button>\r\n                \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SigninForm;","import './Form.css'\r\nimport { useState } from 'react'\r\n\r\nconst SignupForm = () => {\r\n\r\n    const [email,setEmail] = useState('Enter email');\r\n\r\n    const [password,setPassword] = useState({\r\n        value: 'Enter password',\r\n        isValid: true\r\n    }); \r\n    \r\n    const passwordCheckHandler = (event) => \r\n    {\r\n        const updatedPassword = event.target.value;\r\n        let isValid = false;\r\n        if(!updatedPassword.includes(' ') && updatedPassword.trim().length >= 8)\r\n        {\r\n            isValid = true;\r\n        }\r\n        setPassword({value : updatedPassword , isValid : isValid});\r\n    }\r\n\r\n    return (\r\n        <div className=\"form_container\">\r\n            <h1 id=\"form_title\">sign up</h1>\r\n            <form onSubmit={()=>console.log(\"to change\")}>\r\n\r\n                <input \r\n                        type=\"text\" \r\n                        name=\"email\" value={email}\r\n                        onFocus={() => {setEmail(email !== 'Enter email' ? email : '')}}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n\r\n                <input \r\n                    type={password.value !== 'Enter password' ? 'password' : 'text'}\r\n                    name=\"password\" \r\n                    value={password.value} \r\n                    className={password.isValid === false && password.value !== 'Enter password' ? \"invalid_input\" : ''}\r\n                    onFocus={() => {setPassword({...password,value: password.value !== 'Enter password' ? password.value : ''})}}\r\n                    onChange={e => passwordCheckHandler(e)}\r\n                />\r\n                \r\n                <button className=\"button signup_bottom\" type=\"submit\">Sign Up</button>\r\n            </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SignupForm;","import { useEffect , useContext , useReducer } from 'react'\r\n\r\nimport { AuthenticationContext } from '../../Context/AuthContext/AuthContext'\r\nimport { Toolbar } from '../../components/Templates/Toolbar/Toolbar'\r\nimport { Footer } from '../../components/Templates/Footer/Footer'\r\nimport { Auxiliary } from '../../components/Auxiliary/Auxiliary'\r\n\r\nimport Backdrop from '../../components/Templates/Backdrop/Backdrop'\r\nimport SigninForm from '../../components/Templates/Form/SigninForm'\r\nimport SignupForm from '../../components/Templates/Form/SignupForm'\r\n\r\nimport './Layout.css'\r\n\r\nconst SIGN_IN_ATTEMPT = 'SIGN_IN_ATTEMPT'\r\nconst SIGN_UP_ATTEMPT = 'SIGN_UP_ATTEMPT'\r\nconst EXIT_FORM = 'EXIT_FORM'\r\n\r\nconst layOutDisplayReducer = (prevDisplay , action) => \r\n{\r\n    switch(action.type) \r\n    {\r\n        case SIGN_IN_ATTEMPT:\r\n            return { ...prevDisplay , backdrop:true , signin:true};\r\n        case SIGN_UP_ATTEMPT:\r\n            return { ...prevDisplay , backdrop:true , signup:true};\r\n        case EXIT_FORM:\r\n            return { ...prevDisplay , backdrop:false , signin:false , signup:false };\r\n        default:\r\n            throw new Error('Something went wrong');\r\n    }\r\n}\r\n\r\nexport const Layout = props => {\r\n\r\n    const authContext = useContext(AuthenticationContext);\r\n\r\n    const [layOutDisplay , dispatchLayoutDisplay] = useReducer(layOutDisplayReducer , { \r\n        backdrop:false,\r\n        signin:false,\r\n        signup:false \r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        if(!layOutDisplay.signin && !layOutDisplay.signup)\r\n        {\r\n            document.body.style.overflow = 'initial';\r\n        }\r\n        else \r\n        {\r\n            document.body.style.overflow = 'hidden';\r\n        }\r\n    },[layOutDisplay.signin , layOutDisplay.signup])\r\n\r\n\r\n    let backDropView = null;\r\n\r\n    if(layOutDisplay.backdrop === true)\r\n    {\r\n        backDropView = <Backdrop clicked={() => \r\n            {\r\n            dispatchLayoutDisplay({type:EXIT_FORM})\r\n            }}/>;\r\n    }\r\n    \r\n    return (\r\n        <Auxiliary>\r\n            <div className=\"main_wrapper\">\r\n                <Toolbar \r\n                    signupClicked = { () => { dispatchLayoutDisplay({type:SIGN_UP_ATTEMPT}) }}\r\n                    signinClicked = {() => { dispatchLayoutDisplay({type:SIGN_IN_ATTEMPT}) }}\r\n                    signOutClicked = {authContext.changeAuthStatus}\r\n                />  \r\n                { layOutDisplay.signin ? <SigninForm loginClicked={() => dispatchLayoutDisplay({type:EXIT_FORM})}/> : \r\n                layOutDisplay.signup ? <SignupForm /> : null }\r\n                { backDropView }\r\n                { props.children }\r\n            </div>\r\n            <Footer />\r\n        </Auxiliary>\r\n        );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/lilach_running.84d08ecc.jpg\";","import './TrainingOptions.css'\r\nimport { Auxiliary } from '../../../Auxiliary/Auxiliary'\r\nimport icon from './icons/lilach_running.jpg'\r\n\r\nexport const TrainingOptions = () => {\r\n    return (\r\n        <Auxiliary>\r\n\r\n            <div className=\"option\">\r\n                <div className=\"option__info\">\r\n                    <h1 className=\"option__name\">Running</h1>\r\n                    <p className=\"option__text\">\r\n                        By choosing the distance and level of difficulty you will get a running workout that is tailored just for you.\r\n                        You will end up writing how long you did the training and we will already calculate for you your results during the training.\r\n                        So go ahead and it's time to find a friend to join you or some nice playlist to hear and get going.\r\n                    </p>\r\n                </div>\r\n                <div className=\"option__image-container\">\r\n                    <img src={icon} alt=\"\"/>\r\n                </div>\r\n            </div> \r\n\r\n            <div className=\"option\" id=\"training-2\">\r\n                <div className=\"option__image-container\">\r\n                    <img src={icon} alt=\"\"/>\r\n                </div>\r\n                <div className=\"option__info\">\r\n                    <h1 className=\"option__name\">Strength</h1>\r\n                    <p className=\"option__text\">\r\n                        Here you will find workouts with or without weights.\r\n                        You have the option to build a workout according to the muscles you want to focus on or a full body workout where you will work on all the body muscles.\r\n                        And all of course according to your level\r\n                    </p>\r\n                </div>\r\n            </div> \r\n\r\n            <div className=\"option\">\r\n                <div className=\"option__info\">\r\n                    <h1 className=\"option__name\">Functional</h1>\r\n                    <p className=\"option__text\">\r\n                        The site offers a wide range of functional training.\r\n                        You can choose a more relaxed workout in which you work hard on the muscles, such as toning and shaping / low impact, \r\n                        or a bounce hit workout that will raise your heart rate while you will also feel all the muscles working. \r\n                        Feel free to come in and see the different options and of course the length of the training of your choice.\r\n                    </p>\r\n                </div>\r\n                <div className=\"option__image-container\">\r\n                    <img src={icon} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            \r\n        </Auxiliary>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/lilach_running.84d08ecc.jpg\";","import './WorkoutBuilder.css'\r\nimport { Auxiliary } from '../../../components/Auxiliary/Auxiliary'\r\nimport { useHistory } from 'react-router-dom';\r\nimport icon from './icons/lilach_running.jpg'\r\n\r\nexport const EASY = 'Easy';\r\nexport const MEDIUM = 'Medium';\r\nexport const HARD = 'Hard';\r\nexport const CLEAR_CHOICES = 'CLEAR_CHOICES';\r\n\r\nexport const difficultyLevelDropBox = [\r\n    <option value='' key='Select difficulty Level'>Select difficulty Level</option>,\r\n    <option value={EASY} key={EASY}>{EASY}</option>,\r\n    <option value={MEDIUM} key={MEDIUM}>{MEDIUM}</option>,\r\n    <option value={HARD} key={HARD}>{HARD}</option>\r\n];\r\n\r\nexport const WorkoutBuilder = () => {\r\n\r\n        const history = useHistory();\r\n\r\n        return (\r\n            <Auxiliary>\r\n                \r\n                <div className=\"training_options_container\">\r\n                    \r\n                    <div className=\"training_option\">\r\n                        <img \r\n                            src={icon} \r\n                            alt=\"\"\r\n                            onClick={() => history.push('/running-builder')}\r\n                        />\r\n                        <p\r\n                            className=\"description\"\r\n                            onClick={() => history.push('/running-builder')}>Running\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"training_option\">\r\n                        <img \r\n                            src={icon} \r\n                            alt=\"\"\r\n                            onClick={() => history.push('/strength-builder')}\r\n                        />\r\n                        <p \r\n                            className=\"description\"\r\n                            onClick={() => history.push('/strength-builder')}>\r\n                                Strength\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"training_option\">\r\n                        <img \r\n                            src={icon} \r\n                            alt=\"\"\r\n                            onClick={() => history.push('/functional-builder')}\r\n                        />\r\n                        <p \r\n                            className=\"description\"\r\n                            onClick={() => history.push('/functional-builder')}>\r\n                                Functional\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Auxiliary>\r\n            );\r\n        }\r\n","\r\nexport const InputSelection = props => {\r\n    return (\r\n            <select \r\n                value={props.value}\r\n                disabled={props.disable}\r\n                dir={props.direction}  \r\n                onChange={(event) => props.changed(event)}\r\n                >\r\n                        {props.selection}\r\n            </select>\r\n        \r\n    )\r\n}\r\n","export const durationDropBox = [\r\n    <option value='' key='Select workout duration'>Select workout duration</option>,\r\n    <option value={20} key={20}>20</option>,\r\n    <option value={30} key={30}>30</option>,\r\n    <option value={40} key={40}>40</option>,\r\n    <option value={50} key={50}>50</option>\r\n];\r\n\r\nexport const CORE = 'CORE'  \r\nexport const FUNCTIONAL = 'FUNCTIONAL' \r\nexport const HIT = 'HIT'  \r\nexport const LOW_IMPACT = 'LOW_IMPACT'\r\nexport const YOGA = 'YOGA'","export default __webpack_public_path__ + \"static/media/core.9778d0cc.jpg\";","export default __webpack_public_path__ + \"static/media/functional.b73797bc.jpg\";","export default __webpack_public_path__ + \"static/media/hit.6baa958a.jpg\";","export default __webpack_public_path__ + \"static/media/low-impact.04c6e94a.jpg\";","export default __webpack_public_path__ + \"static/media/yoga.0e532cc7.jpg\";","import './FunctionalBuilder.css'\r\nimport { useState } from 'react'\r\nimport { InputSelection } from '../../../../components/Templates/InputSelection/InputSelection'\r\nimport { \r\n    CORE , \r\n    FUNCTIONAL , \r\n    HIT , \r\n    LOW_IMPACT ,\r\n    YOGA ,\r\n    durationDropBox \r\n    \r\n} from './FunctionalBuilderUtility.js'\r\nimport coreIcon from './icons/core.jpg'\r\nimport functionalIcon from './icons/functional.jpg'\r\nimport hitIcon from './icons/hit.jpg'\r\nimport lowImpactIcon from './icons/low-impact.jpg'\r\nimport yogaIcon from './icons/yoga.jpg'\r\n\r\n\r\nexport const FunctionalBuilder = () => {\r\n\r\n    const [ trainingType , setTrainingType ] = useState('');\r\n    const [ trainingDuration , setTrainingDuration ] = useState('');\r\n    \r\n    const submitTrainingHandler = () => \r\n    {\r\n        if(trainingType.trim() !== '' && trainingDuration.trim() !== '')\r\n        {\r\n            console.log('submitted')\r\n        }\r\n    }\r\n\r\n    console.log(trainingDuration)\r\n\r\n    return (\r\n        <div className=\"functional_workout_container\">\r\n\r\n            <div className=\"side_guide\">\r\n                <p>\r\n                    Welcome to the innovative fitness site<br/> that offers you workouts that can<br/> be performed anywhere, anytime.<br/><br/>\r\n                    Feel free to go in and choose the training <br/>that suits you according to your level<br/> and the type of training you want to perform.<br/><br/>\r\n                    On the website you can schedule future trainings\r\n                </p>\r\n                <hr></hr>\r\n                <button \r\n                    id=\"set-workout-btn\" \r\n                    disabled={trainingType.trim() === '' || trainingDuration.trim() === ''}\r\n                    onClick={submitTrainingHandler}>Give me my workout</button>\r\n            </div>\r\n\r\n            <div className=\"custom-select\">    \r\n                <InputSelection \r\n                    direction=\"ltr\" \r\n                    selection={durationDropBox}\r\n                    changed={e => {setTrainingDuration(e.target.value)}}\r\n                    />\r\n            </div>\r\n\r\n            <div className=\"functional_content \">\r\n                <div className={trainingType === CORE ? \"tooltip selected\" : \"tooltip\"}>\r\n                    <img src={coreIcon}  alt=\"\" onClick={ () => setTrainingType(CORE)}/>\r\n                    <div className=\"tooltiptext\">\r\n                        Strong core muscles are what separate us from a strong, healthy and painless body and that is how we train them properly.\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={trainingType === FUNCTIONAL ? \"tooltip selected\" : \"tooltip\"}>\r\n                    <img src={functionalIcon} alt=\"\" onClick={ () => setTrainingType(FUNCTIONAL)} />\r\n                    <div className=\"tooltiptext\">\r\n                        Functional training leads to significant calorie burning and it combines different groups of muscles and core muscles. \r\n                    </div>\r\n                </div>\r\n\r\n                <div className={trainingType === HIT ? \"tooltip selected\" : \"tooltip\"}>\r\n                    <img src={hitIcon} alt=\"\" onClick={ () => setTrainingType(HIT)} />\r\n                    <div className=\"tooltiptext\">\r\n                        Hit training is training at high intensity and pulse intervals. \r\n                        This is a continuous training divided into work segments that combine aerobic training and strength, an effective and especially challenging training.  \r\n                    </div>\r\n                </div>\r\n\r\n                <div className={trainingType === LOW_IMPACT ? \"tooltip selected\" : \"tooltip\"}>\r\n                    <img src={lowImpactIcon} alt=\"\" onClick={ () => setTrainingType(LOW_IMPACT)} />\r\n                    <div className={\"tooltiptext\"}>\r\n                        Cardio training without jumps LOW-IMPACT - is the ultimate solution for anyone who is less connected to jumps and jumps. \r\n                        High-intensity training, and what a surprise it will be when you end up sweating like you did not stop jumping. \r\n                    </div>\r\n                </div>\r\n                \r\n                <div className={trainingType === YOGA ? \"tooltip selected\" : \"tooltip\"}>\r\n                    <img src={yogaIcon} alt=\"\" onClick={ () => setTrainingType(YOGA)} />\r\n                    <div className=\"tooltiptext\">\r\n                        Connection between body and mind. \r\n                        Combining breathing and relaxation is important and constructive work for all the muscles of the body.\r\n                    </div>\r\n                </div>       \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","export const CHEST = 'Chest';\r\nexport const ARMS = 'Arms';\r\nexport const SHOULDERS = 'Shoulders';\r\nexport const LEGS = 'Legs';\r\nexport const BACK = 'Back';\r\nexport const ABS = 'Abs';\r\n\r\nexport const musclesAmountDropBox =  [\r\n    <option value='' key='Select difficulty Level'>Choose a number of muscles</option>,\r\n    <option value={2} key={2}>{2}</option>,\r\n    <option value={3} key={3}>{3}</option>,\r\n    <option value={4} key={4}>{4}</option>,\r\n    <option value={5} key={5}>{5}</option>,\r\n    <option value={6} key={6}>{6}</option>\r\n];  \r\n\r\n\r\nexport const strengthMusclesMap = new Map();\r\n\r\n\r\nstrengthMusclesMap.set(CHEST, [\r\n    \"Wide blanket push-ups\",\r\n    \"Chest compression with weights lying weights\",\r\n    \"Narrow blanket push-ups\",\r\n    \"Diamond Blanket Push-ups\",\r\n    \"Blanket push-ups Negative slope\",\r\n    \"butterfly\"\r\n]);\r\n\r\nstrengthMusclesMap.set(ARMS, [\r\n    \"Front hand elbow flexion\",\r\n    \"Sitting elbows while sitting with a barbell behind the head - back hand\",\r\n    \"Tablets\",\r\n    \"Hammers - front hand\",\r\n    \"Lying down elbows with a weight behind the head - back hand\",\r\n    \"Parallels against a bench - back hand\",\r\n    \"Parallel against body weight - back hand\",\r\n    \"Standing elbows against weights by tilting the body forward - back hand\",\r\n    \"Chest squeezing with a narrow grip - back hand\"\r\n]);\r\n\r\nstrengthMusclesMap.set(SHOULDERS, [\r\n    \"Swing with one hand against a dumbbell\",\r\n    \"Narrow shoulder pressure against weights\",\r\n    \"Shoulder removal against weights\",\r\n    \"Bending shoulder against weights\",\r\n    \"Wide shoulder press against weights\",\r\n    \"Rowing up against weights\",\r\n    \"Arnold click\",\r\n    \"Standing shoulder flexion Hammer grip - rotation\",\r\n    \"Bending shoulders at an angle\",\r\n    \"Shoulder removal by tilting the body forward\"\r\n\r\n]);\r\n\r\n\r\nstrengthMusclesMap.set(LEGS, [\r\n    \"Squat with / without weight\",\r\n    \"Lunch\",\r\n    \"Dead Lift\",\r\n    \"One leg Dead lift \",\r\n    \"Sumo Squat\",\r\n    \"Squat kick\",\r\n    \"Swing with kettlebell / dumbbell\",\r\n    \"Dead Lift Romanian\",\r\n    \"Static squat\",\r\n    \"Thigh removal\",\r\n    \"Back thigh raid\",\r\n    \"Pelvic levels\",\r\n    \"Squat Jump\",\r\n    \"Lunch foot on the step\",\r\n    \"Side lunch\"\r\n]);\r\n\r\n\r\nstrengthMusclesMap.set(BACK, [\r\n    \"Tilting the back a narrow row against hand weights\",\r\n    \"Rise in tension in a narrow grip\",\r\n    \"Rise in tension with a wide grip\",\r\n    \"Rowing with one hand Mode 2\",\r\n    \"Pullover\",\r\n    \"Superman - Emphasis on lower back\"\r\n]);\r\n\r\n\r\nstrengthMusclesMap.set(ABS, [\r\n    \"Vertical pelvic lift\",\r\n    \"Crunches\",\r\n    \"Bicycle belly\",\r\n    \"Mountain climber in mode 2\",\r\n    \"Lateral abdominal flexion against standing weights\",\r\n    \"Diagonal abdominal flexion\",\r\n    \"Side plank\",\r\n    \"Static abdomen - Planck\",\r\n    \"Bridge\",\r\n    \"Superman in Mode 6\"\r\n]);\r\n\r\n\r\n","import '../WorkoutBuilder.css'\r\nimport './StrengthWorkout.css'\r\nimport { useState , useEffect } from 'react'\r\nimport { strengthMusclesMap } from './StrengthBuilderUtility';\r\n\r\nexport const MuscleOptionDisplay  = props => {\r\n\r\n    const [ currentExercisesChosen , setCurrentExercisesChosen] = useState([]);\r\n    \r\n    useEffect(() => \r\n    {\r\n        setCurrentExercisesChosen([]);\r\n    } , [props.choicesSubmitted] );\r\n\r\n\r\n    const exerciseClickedHandler = exercise => \r\n    {\r\n        const isExerciseChosen = currentExercisesChosen.includes(exercise);\r\n        let updatedExercises;\r\n\r\n        if(isExerciseChosen)\r\n        {\r\n            updatedExercises = currentExercisesChosen.filter(e => e !== exercise);\r\n            setCurrentExercisesChosen(updatedExercises);\r\n            props.exercisesUpdate(props.muscle,updatedExercises);\r\n        }\r\n        \r\n        else if(currentExercisesChosen.length < props.exercisesToChoose )\r\n        {\r\n            updatedExercises = [...currentExercisesChosen, exercise];\r\n            setCurrentExercisesChosen(updatedExercises);\r\n            props.exercisesUpdate(props.muscle,updatedExercises);\r\n        }\r\n        \r\n    }\r\n\r\n    const getExercises = muscle => \r\n    {\r\n        const exercisesToDisplay = [];\r\n        const categoryExercises = strengthMusclesMap.get(muscle);\r\n\r\n        for(let exerciseIndex = 0 ; exerciseIndex < categoryExercises.length ; exerciseIndex ++)\r\n        {\r\n            const exercise = categoryExercises[exerciseIndex];\r\n            exercisesToDisplay.push(\r\n                    <p \r\n                        className={ currentExercisesChosen.includes(exercise) ? \"muscle_chosen\" : \"\"}\r\n                        key={exerciseIndex}\r\n                        onClick={ () => exerciseClickedHandler(exercise)}>\r\n                        {exercise} </p>\r\n            );\r\n        }\r\n        return exercisesToDisplay;\r\n    }\r\n\r\n    let content = '';\r\n\r\n    if(props.choicesSubmitted && props.isMuscleSelected)\r\n    {\r\n        content = \r\n        <div className=\"chosen_muscle_wrapper\">\r\n            <div className='strength_grid_cube selected '>\r\n                    <img \r\n                        src={props.imageSource} \r\n                        alt=\"\"\r\n                        onClick={() => \r\n                        {\r\n                            if(!props.choicesSubmitted)\r\n                            {\r\n                                props.setMuscleSelected();\r\n                            }\r\n                        }}/>\r\n                </div>\r\n                <div className=\"cube_content \">\r\n                    {getExercises(props.muscle)} \r\n            </div>        \r\n        </div>\r\n    }\r\n    else if(!props.choicesSubmitted)\r\n    {\r\n        content = \r\n            <div className={props.isMuscleSelected ? 'strength_grid_cube selected' : 'strength_grid_cube'}>\r\n                <img \r\n                    src={props.imageSource} \r\n                    alt=\"\"\r\n                    onClick={() => \r\n                    {\r\n                        if(!props.choicesSubmitted)\r\n                        {\r\n                            props.setMuscleSelected();\r\n                        }\r\n                    }}/>\r\n            </div> ;\r\n    }\r\n    \r\n    return content;\r\n}\r\n","export const StrengthSideDisplay = props => {\r\n    \r\n    return (               \r\n\r\n            <div className={props.currentMusclesChosenAmount === props.musclesAmount && props.difficultyLevel.trim() !== '' ? \"side_guide\" : \"side_guide workout_disabled\"}>\r\n                <p>\r\n                    Welcome to the innovative fitness site<br/>\r\n                     that offers you workouts that can<br/> \r\n                     be performed anywhere, anytime.<br/><br/>\r\n                    Feel free to go in and choose the training <br/>\r\n                    that suits you according to your level<br/> \r\n                    and the type of training you want to perform.<br/><br/>\r\n                    On the website you can schedule future trainings\r\n                </p>\r\n                <hr></hr>\r\n\r\n                {!props.choiceSubmitted ?\r\n                    <button \r\n                        id=\"set-workout-btn\" \r\n                        disabled={props.currentMusclesChosenAmount !== props.musclesAmount || props.difficultyLevel.trim() === ''}\r\n                        onClick={props.submitClicked}>\r\n                            Let me choose my exercises\r\n                    </button>\r\n                : \r\n                    <div className=\"workout-submit-container\"> \r\n                        <button \r\n                            id=\"workout-submit-btn\" \r\n                            onClick={props.workoutSubmit}>Submit workout</button> \r\n                        <button \r\n                            id=\"clean-options-btn\" \r\n                            className=\"cancel-workout\"\r\n                            onClick={props.clearClicked}>\r\n                            Clean my choices\r\n                        </button>\r\n                    </div>\r\n                }\r\n                {/* DISPLAY WORKOUT CHOICES */}\r\n            </div>\r\n            );\r\n}\r\n\r\n","import \r\n{ \r\n    CHEST,\r\n    ARMS,\r\n    SHOULDERS,\r\n    LEGS,\r\n    BACK,\r\n    ABS,\r\n} from './StrengthBuilderUtility'\r\nimport { CLEAR_CHOICES } from '../WorkoutBuilder'\r\n\r\n\r\nexport const musclesReducer = (curMusclesChoice,action) => \r\n{\r\n\r\n    switch (action.type)\r\n    {\r\n        case CHEST: \r\n            return { \r\n                ...curMusclesChoice , \r\n                currentMusclesChosenAmount: curMusclesChoice.CHEST === true ? curMusclesChoice.currentMusclesChosenAmount - 1 : curMusclesChoice.currentMusclesChosenAmount + 1,\r\n                CHEST: !curMusclesChoice.CHEST, \r\n                    };\r\n        case ARMS: \r\n            return {\r\n                ...curMusclesChoice , \r\n                currentMusclesChosenAmount: curMusclesChoice.ARMS === true ? curMusclesChoice.currentMusclesChosenAmount - 1 : curMusclesChoice.currentMusclesChosenAmount + 1,\r\n                ARMS: !curMusclesChoice.ARMS, \r\n            };\r\n        case SHOULDERS: \r\n            return {\r\n                ...curMusclesChoice , \r\n                currentMusclesChosenAmount: curMusclesChoice.SHOULDERS === true ? curMusclesChoice.currentMusclesChosenAmount - 1 : curMusclesChoice.currentMusclesChosenAmount + 1,\r\n                SHOULDERS: !curMusclesChoice.SHOULDERS, \r\n            };\r\n        case LEGS: \r\n            return {\r\n                ...curMusclesChoice , \r\n                currentMusclesChosenAmount: curMusclesChoice.LEGS === true ? curMusclesChoice.currentMusclesChosenAmount - 1 : curMusclesChoice.currentMusclesChosenAmount + 1,\r\n                LEGS: !curMusclesChoice.LEGS, \r\n            };\r\n        case BACK: \r\n            return {\r\n                ...curMusclesChoice , \r\n                currentMusclesChosenAmount: curMusclesChoice.BACK === true ? curMusclesChoice.currentMusclesChosenAmount - 1 : curMusclesChoice.currentMusclesChosenAmount + 1,\r\n                BACK: !curMusclesChoice.BACK, \r\n            };\r\n        case ABS: \r\n            return {\r\n                ...curMusclesChoice , \r\n                currentMusclesChosenAmount: curMusclesChoice.ABS === true ? curMusclesChoice.currentMusclesChosenAmount - 1 : curMusclesChoice.currentMusclesChosenAmount + 1,\r\n                ABS: !curMusclesChoice.ABS, \r\n            };\r\n        case CLEAR_CHOICES:\r\n            return {\r\n                CHEST: false,\r\n                ARMS: false,\r\n                SHOULDERS: false,\r\n                LEGS: false,\r\n                BACK: false,\r\n                ABS: false,\r\n                currentMusclesChosenAmount: 0\r\n            };\r\n        default:\r\n            throw new Error('Something went wrong')\r\n    }\r\n}\r\n\r\n\r\nexport const exercisesReducer = (curExercisesChoice,action) => \r\n{\r\n    switch (action.musclesAmount)\r\n    {\r\n        case 2:\r\n            return { musclesAmount: action.musclesAmount , numOfExercisesPerMuscle: 4};\r\n        case 3:\r\n            return { musclesAmount: action.musclesAmount , numOfExercisesPerMuscle: 3};\r\n        case 4:\r\n            return { musclesAmount: action.musclesAmount , numOfExercisesPerMuscle: 2};\r\n        case 5:\r\n            return { musclesAmount: action.musclesAmount , numOfExercisesPerMuscle: 2};\r\n        case 6:\r\n            return { musclesAmount: action.musclesAmount , numOfExercisesPerMuscle: 2};\r\n        default:\r\n            return { musclesAmount: -1 , numOfExercisesPerMuscle: 0};\r\n    }\r\n        \r\n}","export default __webpack_public_path__ + \"static/media/chest-muscle.13d525b1.jpg\";","export default __webpack_public_path__ + \"static/media/arms-muscle.33648479.jpg\";","export default __webpack_public_path__ + \"static/media/shoulders-muscle.c99cedd6.jpg\";","export default __webpack_public_path__ + \"static/media/legs-muscle.33edda34.jpg\";","export default __webpack_public_path__ + \"static/media/back-muscle.c78642d7.jpg\";","export default __webpack_public_path__ + \"static/media/abs-muscle.26ca8e32.jpg\";","import React , { useState , useReducer, useEffect } from 'react'\r\nimport '../WorkoutBuilder.css'\r\nimport { MuscleOptionDisplay } from './MuscleOptionDisplay'\r\nimport { InputSelection } from '../../../../components/Templates/InputSelection/InputSelection'\r\nimport \r\n{ \r\n    CHEST,\r\n    ARMS,\r\n    SHOULDERS,\r\n    LEGS,\r\n    BACK,\r\n    ABS,\r\n    musclesAmountDropBox,\r\n} from './StrengthBuilderUtility';\r\nimport { StrengthSideDisplay } from './StrengthSideDisplay'\r\nimport { \r\n    CLEAR_CHOICES,\r\n    difficultyLevelDropBox\r\n } from '../WorkoutBuilder'\r\nimport { musclesReducer , exercisesReducer  } from './StrengthReducer'\r\nimport chestIcon from '../icons/chest-muscle.jpg'\r\nimport armsIcon from '../icons/arms-muscle.jpg'\r\nimport shouldersIcon from '../icons/shoulders-muscle.jpg'\r\nimport legsIcon from '../icons/legs-muscle.jpg'\r\nimport backIcon from '../icons/back-muscle.jpg'\r\nimport absIcon from '../icons/abs-muscle.jpg'\r\n\r\n\r\nexport const StrengthBuilder = () => {\r\n    \r\n    const [ userMusclesChoice , dispatchUserMusclesChoice ] = useReducer(musclesReducer , \r\n    {\r\n        CHEST: false,\r\n        ARMS: false,\r\n        SHOULDERS: false,\r\n        LEGS: false,\r\n        BACK: false,\r\n        ABS: false,\r\n        currentMusclesChosenAmount: 0\r\n    });\r\n\r\n    const [ difficultyLevel, setDifficultyLevel ] = useState('');\r\n    \r\n    const [ userExercisesChoice , dispatchUserExercisesChoice ] = useReducer(exercisesReducer , \r\n    {\r\n        numOfExercisesPerMuscle: 0,\r\n        musclesAmount: -1\r\n    });\r\n\r\n    const [ choicesSubmitted , setChoicesSubmitted] = useState(false);\r\n\r\n    const [ chosenExercisesMap , setChosenExercisesMap ] = useState(new Map());\r\n    \r\n    const musclesSubmitHandler = () => \r\n    {\r\n        setChoicesSubmitted(true);\r\n        const updatedChosenExercises = new Map();\r\n        for(let muscle in userMusclesChoice)\r\n        {\r\n            if(userMusclesChoice[muscle] === true)\r\n            {\r\n                updatedChosenExercises[muscle] = [];\r\n            }\r\n        }\r\n        setChosenExercisesMap(updatedChosenExercises);\r\n    }\r\n\r\n    const updateExerciseHandler = (muscle,exercises) => \r\n    {\r\n        const updatedChosenExercises = {...chosenExercisesMap};\r\n        updatedChosenExercises[muscle] = exercises;        \r\n        setChosenExercisesMap(updatedChosenExercises);\r\n    }\r\n\r\n    useEffect(() => \r\n    {\r\n        return () => \r\n        {\r\n            if(choicesSubmitted)\r\n            {\r\n                dispatchUserExercisesChoice('');\r\n                setDifficultyLevel('');\r\n                setChosenExercisesMap(new Map());\r\n            }\r\n        }\r\n    } , [choicesSubmitted] );\r\n\r\n    const workOutSubmitHandler = () => {\r\n        \r\n            console.log(chosenExercisesMap)\r\n        \r\n    }\r\n\r\n    return (\r\n            <div className=\"strength_workout_container\">\r\n                \r\n                <StrengthSideDisplay \r\n                    clearClicked = {() => {\r\n                        dispatchUserMusclesChoice({type:CLEAR_CHOICES})\r\n                        setChoicesSubmitted(false)\r\n                    }}\r\n                    currentMusclesChosenAmount={userMusclesChoice.currentMusclesChosenAmount}\r\n                    musclesAmount={userExercisesChoice.musclesAmount}\r\n                    difficultyLevel={difficultyLevel}\r\n                    choiceSubmitted={choicesSubmitted}\r\n                    submitClicked={musclesSubmitHandler}\r\n                    workoutSubmit={workOutSubmitHandler}\r\n                />\r\n\r\n                <div className=\"strength-custom-select\">\r\n\r\n                    <InputSelection \r\n                        value={difficultyLevel}\r\n                        disable={choicesSubmitted}\r\n                        direction=\"ltr\" \r\n                        selection={difficultyLevelDropBox}\r\n                        changed={e => setDifficultyLevel(e.target.value)} \r\n                        />\r\n                    <InputSelection \r\n                        value={userExercisesChoice.musclesAmount}\r\n                        disable={choicesSubmitted}\r\n                        direction=\"ltr\" \r\n                        selection={musclesAmountDropBox}\r\n                        changed={e => dispatchUserExercisesChoice({ musclesAmount : parseInt(e.target.value,10)} )}\r\n                        />\r\n                </div>\r\n                \r\n                <div className =\"strength_content_container\">\r\n                    <MuscleOptionDisplay \r\n                        muscle={CHEST}\r\n                        setMuscleSelected={() => dispatchUserMusclesChoice({type:CHEST})}\r\n                        isMuscleSelected={userMusclesChoice.CHEST}\r\n                        imageSource={chestIcon}\r\n                        choicesSubmitted={choicesSubmitted}\r\n                        exercisesToChoose={userExercisesChoice.numOfExercisesPerMuscle}\r\n                        exercisesUpdate={updateExerciseHandler}\r\n                    />\r\n\r\n                    <MuscleOptionDisplay \r\n                        muscle={ARMS}\r\n                        setMuscleSelected={() => dispatchUserMusclesChoice({type:ARMS})}\r\n                        isMuscleSelected={userMusclesChoice.ARMS}\r\n                        imageSource={armsIcon}\r\n                        choicesSubmitted={choicesSubmitted}\r\n                        exercisesToChoose={userExercisesChoice.numOfExercisesPerMuscle}\r\n                        exercisesUpdate={updateExerciseHandler}\r\n                    />\r\n\r\n                    <MuscleOptionDisplay \r\n                        muscle={SHOULDERS}\r\n                        setMuscleSelected={() => dispatchUserMusclesChoice({type:SHOULDERS})}\r\n                        isMuscleSelected={userMusclesChoice.SHOULDERS}\r\n                        imageSource={shouldersIcon}\r\n                        choicesSubmitted={choicesSubmitted}\r\n                        exercisesToChoose={userExercisesChoice.numOfExercisesPerMuscle}\r\n                        exercisesUpdate={updateExerciseHandler}\r\n                    />\r\n                    {/* <StrengthSideDisplay \r\n                        clearClicked = {() => {\r\n                            dispatchUserMusclesChoice({type:CLEAR_CHOICES})\r\n                            setChoicesSubmitted(false)\r\n                        }}\r\n                        currentMusclesChosenAmount={userMusclesChoice.currentMusclesChosenAmount}\r\n                        musclesAmount={userExercisesChoice.musclesAmount}\r\n                        difficultyLevel={difficultyLevel}\r\n                        choiceSubmitted={choicesSubmitted}\r\n                        submitClicked={musclesSubmitHandler}\r\n                        workoutSubmit={workOutSubmitHandler}\r\n                    /> */}\r\n\r\n                    <MuscleOptionDisplay \r\n                        muscle={LEGS}\r\n                        setMuscleSelected={() => dispatchUserMusclesChoice({type:LEGS})}\r\n                        isMuscleSelected={userMusclesChoice.LEGS}\r\n                        imageSource={legsIcon}\r\n                        choicesSubmitted={choicesSubmitted}\r\n                        exercisesToChoose={userExercisesChoice.numOfExercisesPerMuscle}\r\n                        exercisesUpdate={updateExerciseHandler}\r\n                    />\r\n\r\n                    <MuscleOptionDisplay \r\n                        muscle={BACK}\r\n                        setMuscleSelected={() => dispatchUserMusclesChoice({type:BACK})}\r\n                        isMuscleSelected={userMusclesChoice.BACK}\r\n                        imageSource={backIcon}\r\n                        choicesSubmitted={choicesSubmitted}\r\n                        exercisesToChoose={userExercisesChoice.numOfExercisesPerMuscle}\r\n                        exercisesUpdate={updateExerciseHandler}\r\n                    />\r\n\r\n                    <MuscleOptionDisplay \r\n                        muscle={ABS}\r\n                        setMuscleSelected={() => dispatchUserMusclesChoice({type:ABS})}\r\n                        isMuscleSelected={userMusclesChoice.ABS}\r\n                        imageSource={absIcon}\r\n                        choicesSubmitted={choicesSubmitted}\r\n                        exercisesToChoose={userExercisesChoice.numOfExercisesPerMuscle}\r\n                        exercisesUpdate={updateExerciseHandler}\r\n                    />  \r\n                </div>\r\n\r\n            </div>      \r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// --------------------\r\n\r\n\r\n// import React , { useState , useReducer } from 'react'\r\n// import '../WorkoutBuilder.css'\r\n// import { StrengthWorkoutOption } from './StrengthWorkoutOption'\r\n// import { InputSelection } from '../../../../components/Templates/InputSelection/InputSelection'\r\n// import { \r\n//     CHEST,\r\n//     ARMS,\r\n//     SHOULDERS,\r\n//     LEGS,\r\n//     BACK,\r\n//     ABS,\r\n//     difficultyLevelDropBox ,\r\n//     musclesAmountDropBox,\r\n//     CategoriesMap,\r\n// } from './StrengthBuilderUtility';\r\n// import { COMPLETE_CHOOSING } from '../WorkoutBuilder'\r\n// import { musclesReducer } from './MusclesReducer'\r\n// import chestIcon from '../icons/chest-muscle.jpg'\r\n// import armsIcon from '../icons/arms-muscle.jpg'\r\n// import shouldersIcon from '../icons/shoulders-muscle.jpg'\r\n// import legsIcon from '../icons/legs-muscle.jpg'\r\n// import backIcon from '../icons/back-muscle.jpg'\r\n// import absIcon from '../icons/abs-muscle.jpg'\r\n\r\n\r\n// export const StrengthBuilder = () => {\r\n    \r\n//     const [ userMusclesChoice , dispatchUserMusclesChoice] = useReducer(musclesReducer , {\r\n//         CHEST:false,\r\n//         ARMS:false,\r\n//         SHOULDERS:false,\r\n//         LEGS:false,\r\n//         BACK:false,\r\n//         ABS:false,\r\n//         musclesChosenAmount:0,\r\n//         COMPLETE_CHOOSING:false\r\n//     });\r\n    \r\n//     const [ musclesAmount, setMusclesAmount] = useState(0);\r\n//     const [ difficultyLevel, setDifficultyLevel] = useState('');\r\n    \r\n//     console.log(userMusclesChoice.musclesChosenAmount !== musclesAmount)\r\n\r\n//     const displayMusclesExercies = (muscleChoice) => {\r\n//         const exercisesToDisplay = [];\r\n//         if(muscleChoice !== '')\r\n//         {\r\n//             const categoryExercises = CategoriesMap.get(muscleChoice);\r\n//             for(let exerciseIndex = 0 ; exerciseIndex < categoryExercises.length ; exerciseIndex ++)\r\n//             {\r\n//                 exercisesToDisplay.push(\r\n//                         <p >\r\n//                                 {categoryExercises[exerciseIndex]}\r\n//                         </p>\r\n//                 );\r\n//             }\r\n//         }\r\n//         return exercisesToDisplay;\r\n//     }\r\n\r\n//     // console.log(difficultyLevelSelected,amountOfMusclesSelected);\r\n    \r\n//     return (\r\n//             <div className=\"strength_workout_container\">\r\n\r\n//                 <div className=\"difficulty-custom-select\">\r\n//                     <InputSelection \r\n//                         direction=\"ltr\" \r\n//                         selection={difficultyLevelDropBox}\r\n//                         changed={e => setDifficultyLevel(e.target.value)} \r\n//                         />\r\n//                     <InputSelection \r\n//                         direction=\"ltr\" \r\n//                         selection={musclesAmountDropBox}\r\n//                         changed={e => setMusclesAmount(parseInt(e.target.value,10))}\r\n//                         />\r\n//                 </div>\r\n\r\n//                 <StrengthWorkoutOption \r\n//                     setMuscleSelected={() => dispatchUserMusclesChoice({type:CHEST})}\r\n//                     isMuscleSelected={userMusclesChoice.CHEST}\r\n//                     muscle={CHEST}\r\n//                     getNewDisplay={() => displayMusclesExercies (CHEST)}\r\n//                     imageSource={chestIcon}\r\n//                     completeChoosing={userMusclesChoice.COMPLETE_CHOOSING}\r\n//                     styling={userMusclesChoice.CHEST === true ? 'strength_grid_cube_selected' : 'strength_grid_cube'}/>\r\n\r\n//                 <StrengthWorkoutOption \r\n//                     setMuscleSelected={() => dispatchUserMusclesChoice({type:ARMS})}\r\n//                     isMuscleSelected={userMusclesChoice.ARMS}\r\n//                     muscle={ARMS}\r\n//                     getNewDisplay={() => displayMusclesExercies (ARMS)}\r\n//                     imageSource={armsIcon}\r\n//                     completeChoosing={userMusclesChoice.COMPLETE_CHOOSING}\r\n//                     styling={userMusclesChoice.ARMS === true ? 'strength_grid_cube_selected' : 'strength_grid_cube'}/>\r\n\r\n//                 <StrengthWorkoutOption \r\n//                     setMuscleSelected={() => dispatchUserMusclesChoice({type:SHOULDERS})}\r\n//                     isMuscleSelected={userMusclesChoice.SHOULDERS}\r\n//                     muscle={SHOULDERS}\r\n//                     getNewDisplay={() => displayMusclesExercies (SHOULDERS)}\r\n//                     imageSource={shouldersIcon}\r\n//                     completeChoosing={userMusclesChoice.COMPLETE_CHOOSING}\r\n//                     styling={userMusclesChoice.SHOULDERS === true ? 'strength_grid_cube_selected' : 'strength_grid_cube'}/>\r\n\r\n//                 <div className={userMusclesChoice.musclesChosenAmount === musclesAmount ? \"side_guide\": \"workout_disabled side_guide\"}>\r\n//                     <p>\r\n//                         Welcome to the innovative fitness site<br/> that offers you workouts that can<br/> be performed anywhere, anytime.<br/><br/>\r\n//                         Feel free to go in and choose the training <br/>that suits you according to your level<br/> and the type of training you want to perform.<br/><br/>\r\n//                         On the website you can schedule future trainings\r\n//                     </p>\r\n//                     <hr></hr>\r\n//                     {<button \r\n//                         id=\"workout-submit\" disabled={userMusclesChoice.musclesChosenAmount !== musclesAmount}\r\n//                         onClick={() => dispatchUserMusclesChoice({type : COMPLETE_CHOOSING})}\r\n//                         >Let me choose my exercies</button>}\r\n//                 {/* DISPLAY WORKOUT CHOICES */}\r\n//                 </div>\r\n\r\n//                 <StrengthWorkoutOption \r\n//                     setMuscleSelected={() => dispatchUserMusclesChoice({type:LEGS})}\r\n//                     isMuscleSelected={userMusclesChoice.LEGS}\r\n//                     muscle={LEGS}\r\n//                     getNewDisplay={() => displayMusclesExercies (LEGS)}\r\n//                     imageSource={legsIcon}\r\n//                     completeChoosing={userMusclesChoice.COMPLETE_CHOOSING}\r\n//                     styling={userMusclesChoice.LEGS === true ? 'strength_grid_cube_selected' : 'strength_grid_cube'}/>\r\n\r\n//                 <StrengthWorkoutOption \r\n//                     setMuscleSelected={() => dispatchUserMusclesChoice({type:BACK})}\r\n//                     isMuscleSelected={userMusclesChoice.BACK}\r\n//                     muscle={BACK}\r\n//                     getNewDisplay={() => displayMusclesExercies (BACK)}\r\n//                     imageSource={backIcon}\r\n//                     completeChoosing={userMusclesChoice.COMPLETE_CHOOSING}\r\n//                     styling={userMusclesChoice.BACK === true ? 'strength_grid_cube_selected' : 'strength_grid_cube'}/>\r\n\r\n//                 <StrengthWorkoutOption \r\n//                     setMuscleSelected={() => dispatchUserMusclesChoice({type:ABS})}\r\n//                     isMuscleSelected={userMusclesChoice.ABS}\r\n//                     muscle={ABS}\r\n//                     getNewDisplay={() => displayMusclesExercies (ABS)}\r\n//                     imageSource={absIcon}\r\n//                     completeChoosing={userMusclesChoice.COMPLETE_CHOOSING}\r\n//                     styling={userMusclesChoice.ABS === true ? 'strength_grid_cube_selected' : 'strength_grid_cube'}/>  \r\n//             </div>      \r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// --------------------------------\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import '../WorkoutBuilder.css'\r\n// import { Auxiliary } from '../../../../components/Auxiliary/Auxiliary'\r\n// import { StrengthWorkout } from './StrengthWorkout'\r\n// import { \r\n//     CategoriesMap\r\n// } from './MuscleTypes'\r\n\r\n\r\n// export const StrengthBuilder = () => {\r\n\r\n    \r\n//     const setBuilderStateHandler = (muscleChoice) => {\r\n        \r\n//         const newDisplay = [];\r\n//         if(muscleChoice !== '')\r\n//         {\r\n//             const categoryExercises = CategoriesMap.get(muscleChoice);\r\n//             for(let exerciseIndex = 0 ; exerciseIndex < categoryExercises.length ; exerciseIndex ++)\r\n//             {\r\n//                 newDisplay.push(\r\n//                         <p >\r\n//                                 {categoryExercises[exerciseIndex]}\r\n//                         </p>\r\n//                 );\r\n//             }\r\n//         }\r\n//         return newDisplay;\r\n//     }\r\n    \r\n//     return (\r\n//         <Auxiliary>\r\n//             <StrengthWorkout getNewDisplay={setBuilderStateHandler}/>\r\n//         </Auxiliary>\r\n//     );\r\n// }\r\n","export const runningDistanceDropBox = [\r\n    <option value='' key='CHOOSE'>Choose distance</option>,\r\n    <option value='3' key='3'>3</option>,\r\n    <option value='4' key='4'>4</option>,\r\n    <option value='5' key='5'>5</option>,\r\n    <option value='6' key='6'>6</option>,\r\n    <option value='8' key='8'>8</option>,\r\n    <option value='10' key='10'>10</option>,\r\n    <option value='12' key='12'>12</option>,\r\n    <option value='14' key='14'>14</option>\r\n];\r\n\r\nexport const runningEasyLevelMap = new Map();\r\n\r\nrunningEasyLevelMap.set(\r\n    '3','Warm up - 500 Main part (must be performed 4 times) 400 100 Release - 500',\r\n    '4','Warm up - 500 Main part (must be performed 5 times) 400 200 Release - 500',\r\n    '5','Heating - 500 Main part (must be performed 4 times) 500 500 Release - 500',\r\n    '6','Heating - 500 Main part (must be performed 5 times) 500 500 Release - 500',\r\n    '8','Heating - 500 Main part (must be performed 7 times) 500 500 Release - 500',\r\n    '10','Heating - 500 Main part (must be performed 6 times) 1000 500 Release - 500',\r\n    '12','Heating - 500 Main part (must be performed 5 times) 1000 1000 Release - 500'\r\n);\r\n\r\nexport const runningMediumLevelMap = new Map();\r\n\r\nrunningMediumLevelMap.set(\r\n    '3','Warm up - 500 Main part (must be performed 4 times) 400 100 Release - 500',\r\n    '4','Warm up - 500 Main part (must be performed 5 times) 400 200 Release - 500',\r\n    '5','Heating - 500 Main part (must be performed 4 times) 500 500 Release - 500',\r\n    '6','Heating - 500 Main part (must be performed 5 times) 500 500 Release - 500',\r\n    '8','Heating - 500 Main part (must be performed 7 times) 500 500 Release - 500',\r\n    '10','Heating - 500 Main part (must be performed 6 times) 1000 500 Release - 500',\r\n    '12','Heating - 500 Main part (must be performed 5 times) 1000 1000 Release - 500'\r\n);\r\n\r\nexport const runningHardLevelMap = new Map();\r\n\r\nrunningHardLevelMap.set(\r\n    '3','Warm up - 500 Main part (must be performed 4 times) 400 100 Release - 500',\r\n    '4','Warm up - 500 Main part (must be performed 5 times) 400 200 Release - 500',\r\n    '5','Heating - 500 Main part (must be performed 4 times) 500 500 Release - 500',\r\n    '6','Heating - 500 Main part (must be performed 5 times) 500 500 Release - 500',\r\n    '8','Heating - 500 Main part (must be performed 7 times) 500 500 Release - 500',\r\n    '10','Heating - 500 Main part (must be performed 6 times) 1000 500 Release - 500',\r\n    '12','Heating - 500 Main part (must be performed 5 times) 1000 1000 Release - 500'\r\n);\r\n","import { useState } from 'react'\r\nimport './RunningBuilder.css'\r\nimport { InputSelection } from '../../../../components/Templates/InputSelection/InputSelection'\r\nimport { difficultyLevelDropBox } from '../WorkoutBuilder'\r\nimport { runningDistanceDropBox } from './RunningBuilderUtility'\r\n\r\nexport const RunningBuilder = () => {\r\n\r\n    const [ distance , setDistance] = useState('');\r\n    const [ difficultyLevel, setDifficultyLevel ] = useState('');\r\n    const [ workoutSubmitted , setWorkoutSubmitted] = useState(false);\r\n\r\n    console.log(\"rendered\")\r\n\r\n    return (\r\n        <div className=\"running_workout_container\">\r\n\r\n            <div className=\"side_guide\">\r\n                <p>\r\n                    Easy - low-intensity training, most of which is done at a relatively low pulse. Suitable for beginner trainees, trainees with knee problems or those looking for something light.<br/><br/>\r\n                    Medium - high-intensity but not very intense training, including sections of short and long heart rate boost, intended for people who are relatively fit and able to combine the ladies during the run.<br/><br/>\r\n                    Hard - High-intensity training almost throughout the training, intended for trainees who run and persevere in training.\r\n                </p>\r\n                <hr></hr>\r\n    \r\n                <button \r\n                    id=\"set-workout-btn\"\r\n                    disabled={distance.trim() === '' || difficultyLevel.trim() === ''}\r\n                    onClick={() => setWorkoutSubmitted(true)}>\r\n                        Give me my workout\r\n                </button>\r\n            \r\n            </div>\r\n\r\n            <div className=\"custom-select\">\r\n                <InputSelection \r\n                    direction=\"ltr\" \r\n                    selection={runningDistanceDropBox}\r\n                    value={distance}\r\n                    disable={workoutSubmitted}\r\n                    changed={e => setDistance(e.target.value)}\r\n                     />\r\n                <InputSelection \r\n                    direction=\"ltr\" \r\n                    selection={difficultyLevelDropBox}\r\n                    value={difficultyLevel}\r\n                    disable={workoutSubmitted}\r\n                    changed={e => setDifficultyLevel(e.target.value)}\r\n                    />\r\n            </div>\r\n\r\n            <div className=\"running_content\">\r\n                <h1>Your chosen running description will be displayed here</h1>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/process-icon.dab7ea4f.jpg\";","export default __webpack_public_path__ + \"static/media/schedule-icon.d1e9f091.jpg\";","export default __webpack_public_path__ + \"static/media/workout-builder-icon.939a9d83.jpg\";","import { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { WorkoutBuilder } from './WorkoutBuilder/WorkoutBuilder'\r\n// import { ProcessReview } from './ProcessReview/ProcessReview'\r\n// import { UserSchedule } from './Schedule/userSchedule'\r\nimport { Footer } from '../../components/Templates/Footer/Footer'\r\nimport { Auxiliary } from '../../components/Auxiliary/Auxiliary'\r\nimport './UserContent.css'\r\nimport processImage from './icons/process-icon.jpg'\r\nimport scheduleImage from './icons/schedule-icon.jpg'\r\nimport builderIcon from './icons/workout-builder-icon.jpg'\r\n\r\n\r\nexport const UserContent = () => {\r\n\r\n    const [processHovered,setProcessHovered] = useState(false);\r\n    const [scheduleHovered,setScheduleHovered] = useState(false);\r\n    const [builderHovered,setBuilderHovered] = useState(false);\r\n\r\n    let history = useHistory();\r\n\r\n    const notHovered = 'notHovered';\r\n\r\n    let processStyle = notHovered;\r\n    if(processHovered)\r\n    {\r\n        processStyle = 'hoveredBtn';\r\n    }\r\n    let scheduleStyle = notHovered;\r\n    if(scheduleHovered)\r\n    {\r\n        scheduleStyle = 'hoveredBtn';\r\n    }\r\n    let builderStyle = notHovered;\r\n    if(builderHovered)\r\n    {\r\n        builderStyle = 'hoveredBtn';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Auxiliary>\r\n            <div className=\"user_content_container\">\r\n                <div className=\"top_btns\">\r\n                    <div \r\n                        className=\"btn_container\"\r\n                        onMouseOver={()=>setProcessHovered(true)}\r\n                        onMouseLeave={()=>setProcessHovered(false)}>\r\n                        {/* <div className={processStyle}>\r\n                            <h1>Watch the workout you did recently</h1>\r\n                        </div> */}\r\n                        <img \r\n                            src={processImage} alt=\"\"\r\n                            onClick={() => history.push('/process-review')}/>\r\n                        <h2 className=\"content_title\">Review your process</h2>\r\n                    </div>\r\n                    <div \r\n                        className=\"btn_container\"\r\n                        onMouseOver={()=>setScheduleHovered(true)}\r\n                        onMouseLeave={()=>setScheduleHovered(false)}>\r\n                        {/* <div className={scheduleStyle}>\r\n                            <h1>hey im hidden!</h1>\r\n                        </div> */}\r\n                        <img \r\n                            src={scheduleImage} alt=\"\"\r\n                            onClick={() => history.push('/schedule')} />\r\n                        <h2 className=\"content_title\">View your schedule</h2>\r\n                    </div>\r\n                </div >\r\n                <div className=\"bottom_btn\">\r\n                    <div \r\n                        className=\"btn_container\"\r\n                        onMouseOver={()=>setBuilderHovered(true)}\r\n                        onMouseLeave={()=>setBuilderHovered(false)}>\r\n                        {/* <div className={builderStyle}>\r\n                            <h1>hey im hidden!</h1>\r\n                        </div> */}\r\n                    <img \r\n                        src={builderIcon} alt=\"\"\r\n                        onClick={() => history.push('/workout-builder')}/>\r\n                    <h2 className=\"content_title\">Build a new workout </h2>   \r\n                    </div>              \r\n                </div>\r\n            </div>\r\n        </Auxiliary>\r\n        \r\n        )\r\n}","export default __webpack_public_path__ + \"static/media/schedule-icon.c11a8073.jpg\";","export default __webpack_public_path__ + \"static/media/workout-builder-icon.9e596286.jpg\";","import { useHistory } from \"react-router-dom\";\r\nimport './HomePage.css'\r\nimport trainingOptionsLogo from './icons/schedule-icon.jpg'; \r\nimport usersReviewLogo from './icons/workout-builder-icon.jpg'; \r\n\r\nexport const NavigationLayer = () => {\r\n\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"nav_container\">\r\n            <div className=\"nav_item \">\r\n                <button \r\n                    // onMouseOver={}\r\n                    // onMouseLeave={}\r\n                    onClick={() => history.push('/training-options')} >\r\n                    <img src={trainingOptionsLogo} alt=\"\"/>\r\n                </button>\r\n                <h2 className=\"nav_description\">Training options</h2>\r\n            </div>\r\n\r\n            <div className=\"nav_item \">\r\n                <button \r\n                    // onMouseOver={}\r\n                    // onMouseLeave={}\r\n                    onClick={() => history.push('/users-reviews')} >\r\n                    <img src={usersReviewLogo} alt=\"\"/>\r\n                </button>\r\n                <h2 className=\"nav_description\">Users reviews</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/background.f949802c.jpg\";","import './HomePage.css'\r\nimport { Auxiliary } from '../../Auxiliary/Auxiliary'\r\nimport { NavigationLayer } from './NavigationLayer'\r\nimport homePageImage from './icons/background.jpg'\r\n\r\nexport const HomePage = () => {\r\n\r\n    return (\r\n            <Auxiliary>\r\n                <div className=\"homepage_container \">\r\n                    <div className=\"content\">\r\n                        <p>\r\n                            Welcome to the innovative fitness site<br/> that offers you workouts that can<br/> be performed anywhere, anytime.<br/><br/>\r\n                            Feel free to go in and choose the training <br/>that suits you according to your level<br/> and the type of training you want to perform.<br/><br/>\r\n                            On the website you can schedule future trainings<br/> and even invite a friend to do the training with you,<br/>\r\n                            and what is the most fun? <br/>You can see which trainings the site<br/> users have recommended and do them yourself.<br/>\r\n                            So what are you waiting for? \r\n                        </p>\r\n                        <button className=\"joinus_button\">join us</button>\r\n                    </div>             \r\n                    <img src={homePageImage} alt=\"\"/>\r\n                </div>\r\n                <NavigationLayer />\r\n            </Auxiliary>\r\n            \r\n        );\r\n}","import { useContext } from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport { Layout } from '../../containers/Layout/Layout';\r\nimport { TrainingOptions } from '../Templates/SideDrawer/TrainingOptions/TrainingOptions'\r\nimport { WorkoutBuilder } from '../../containers/UserContent/WorkoutBuilder/WorkoutBuilder'\r\nimport { FunctionalBuilder } from '../../containers/UserContent/WorkoutBuilder/FunctionalBuilder/FunctionalBuilder'\r\nimport { StrengthBuilder } from '../../containers/UserContent/WorkoutBuilder/StrengthBuilder/StrengthBuilder'\r\nimport { RunningBuilder } from '../../containers/UserContent/WorkoutBuilder/RunningBuilder/RunningBuilder'\r\nimport { UserContent } from '../../containers/UserContent/UserContent'\r\nimport { HomePage } from '../Templates/HomePage/HomePage'\r\nimport { AuthenticationContext } from '../../Context/AuthContext/AuthContext'\r\n\r\nexport const  Routes = props => {\r\n\r\n    const authContext = useContext(AuthenticationContext);\r\n\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <Route path=\"/training-options\" >\r\n                    <TrainingOptions />\r\n                </Route>\r\n                <Route path=\"/workout-builder\" >\r\n                    <WorkoutBuilder />\r\n                </Route>\r\n                <Route path='/functional-builder'>\r\n                    <FunctionalBuilder />\r\n                </Route>\r\n                <Route path='/strength-builder'>\r\n                    <StrengthBuilder />\r\n                </Route>\r\n                <Route path='/running-builder'>\r\n                    <RunningBuilder />\r\n                </Route>\r\n                <Route path=\"/\" >\r\n                    {authContext.isAuthenticated ? <UserContent/> : <HomePage/>}\r\n                </Route>\r\n            </Switch>\r\n        </Layout>\r\n    );\r\n}","import './App.css'\nimport { Routes } from './components/Routes/Routes'\nimport AuthContext from './Context/AuthContext/AuthContext'\n\nfunction App() {\n  return (\n    <AuthContext>\n      <Routes />\n    </AuthContext>);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}